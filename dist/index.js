const fs=require("fs"),logger=require("morgan"),{resolve}=require("path"),Datastore=require("nedb"),express=require("express"),app=express(),db=new Datastore({filename:resolve(__dirname,"../db/db")}),port=process.env.PORT||3030;db.loadDatabase(),app.use(logger("dev")),app.use(express.json({limit:"6mb",extended:!0})),app.use(express.urlencoded({limit:"5mb",extended:!0})),app.use(express.static(resolve(__dirname,"public"))),app.get("/",(e,r)=>{r.redirect("index.html")}),app.get("/logs",(e,r)=>{r.redirect("/logs/index.html")}),app.get("/map",(e,r)=>{r.redirect("/map/index.html")}),app.get("/api",(e,r)=>{db.find({},function(e,s){if(e)return e;r.json(s)})}),app.post("/api",(e,r)=>{const s=(new Date).getTime(),t=Object.assign({created:s},e.body);db.insert(t,(e,s)=>{if(e)return e;r.json(s)})}),app.delete("/api/one",(e,r)=>{var{id:s}=e.query,{authorization:t}=e.headers;return t?(t=t.split(" ")[1])!==process.env.pass?r.status(401).json({error:"auth doesn't match"}):void db.remove({_id:s},{multi:!0},function(e,t){return e?r.status(400).json({error:e}):0==t?r.status(400).json({error:"id unknow"}):void r.send({removedn:t,id:s})}):r.status(401).json({error:"No credentials sent!"})}),module.exports=app;